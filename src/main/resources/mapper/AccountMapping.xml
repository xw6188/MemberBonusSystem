<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ben.sgzspringbootapi.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="com.ben.sgzspringbootapi.entity.Account">
        <result column="userID" jdbcType="INTEGER" property="userID" />
        <result column="accountID" jdbcType="VARCHAR" property="accountID" />
        <result column="accountName" jdbcType="VARCHAR" property="accountName" />
        <result column="totalBonus" jdbcType="FLOAT" property="totalBonus" />
        <result column="availBonus" jdbcType="FLOAT" property="availBonus" />
        <result column="withdrawPercent" jdbcType="INTEGER" property="withdrawPercent"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="totalOrderAmt" jdbcType="FLOAT" property="totalOrderAmt" />
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <insert id="addNewAccount" parameterType="com.ben.sgzspringbootapi.entity.Account">
        insert into Account (userID, accountID, accountName, totalBonus, availBonus, withdrawPercent, totalOrderAmt, status)
        VALUES(#{userID},#{accountID},#{accountName},#{totalBonus},#{availBonus},#{withdrawPercent}, #{totalOrderAmt}, #{status})
    </insert>

    <delete id="deleteAccount" parameterType="int">
        delete from Account where AccountID = #{AccountID}
    </delete>

    <select id="selectAccountByUserID" resultType="com.ben.sgzspringbootapi.entity.Account">
        select * from Account where userID = #{userID}
    </select>

    <select id="accountList" resultType="com.ben.sgzspringbootapi.entity.Account">
        SELECT * FROM Account;
    </select>

    <update id="updateAccount" parameterType="com.ben.sgzspringbootapi.entity.Account" >
        update account set
        userID = #{userID},
        accountID = #{accountID},
        accountName = #{accountName},
        totalBonus = #{totalBonus},
        availBonus = #{availBonus},
        withdrawPercent = #{withdrawPercent},
        status = #{status},
        totalOrderAmt = #{totalOrderAmt}
        where userID = #{userID}
    </update>

</mapper>